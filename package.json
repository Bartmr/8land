{
  "name": "@app/api",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "engines": {
    "node": "16"
  },
  "scripts": {
    "postinstall": "node ./polyfill-types-mocha.js",
    "install:all": "npm install -g concurrently && concurrently \"npm install\" \"npm run install:web-app\" -n \"install,install:web-app\"",
    "install:web-app": "cd client-side/web-app && npm install",
    "seed": "npm run ts-node ./scripts-dev/seed.ts",
    "tear-down-databases": "npm run ts-node ./scripts-dev/tear-down-databases.ts",
    "start:dev:firebase": "firebase emulators:start --export-on-exit=./.firebase-data --import=./.firebase-data",
    "start:dev": "NODE_ENV=development nest build --watch --webpack --webpackPath webpack-hmr.config.js --path tsconfig.build.json",
    "start:dev:no-typecheck": "NODE_ENV=development nest build --watch --webpack --webpackPath webpack-hmr-no-type-checks.config.js --path tsconfig.build.json",
    "start:dev:tsc": "NODE_ENV=development nest start --path tsconfig.build.json --watch",
    "start:debug": "NODE_ENV=development nest build --watch --webpack --webpackPath webpack-hmr-debug.config.js --path tsconfig.build.json",
    "start:debug:no-typecheck": "NODE_ENV=development nest build --watch --webpack --webpackPath webpack-hmr-debug-no-type-checks.config.js --path tsconfig.build.json",
    "start:debug:tsc": "NODE_ENV=development nest start --path tsconfig.build.json --watch --debug",
    "start:prod": "typeorm migration:run && node dist/src/main.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:cov:changed": "npm run test:cov -- --onlyChanged",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:debug:watch": "npm run test:debug -- --watch",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:e2e:cov": "npm run test:e2e -- --coverage",
    "test:e2e:cov:changed": "npm run test:e2e:cov -- --onlyChanged",
    "test:e2e:watch": "jest --config ./test/jest-e2e.json --watch",
    "test:e2e:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand --config ./test/jest-e2e.json",
    "test:e2e:debug:watch": "npm run test:e2e:debug -- --watch",
    "test:migrations": "jest --config ./test/jest-migrations.json --runInBand",
    "test:migrations:cov": "npm run test:migrations -- --coverage",
    "test:migrations:cov:changed": "npm run test:migrations:cov -- --onlyChanged",
    "test:migrations:watch": "jest --config ./test/jest-migrations.json --runInBand --watch",
    "test:migrations:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand --config ./test/jest-migrations.json",
    "test:migrations:debug:watch": "npm run test:migrations:debug -- --watch",
    "test:all:cov": "jest --config ./test/jest-all.js --coverage",
    "test:all:cov:changed": "npm run test:all:cov -- --onlyChanged",
    "clean:api": "rimraf dist",
    "build:api": "npm run clean:api && nest build --path tsconfig.build.json",
    "typecheck": "tsc --noEmit",
    "typecheck:declaration-files": "tsc -p tsconfig.declaration-files.json --noEmit",
    "format": "prettier --write .",
    "lint": "eslint --ext .ts --max-warnings 0 .",
    "lint:fix": "eslint --ext .ts --max-warnings 0 --fix .",
    "integrity-check:api": "npm run clean:api && concurrently \"npm run typecheck:declaration-files\" \"npm run typecheck\" -n \"typecheck:declaration-files,typecheck:code\" && npm run lint",
    "integrity-check:api:fast": "concurrently \"npm run typecheck:declaration-files\" \"npm run typecheck\" -n \"typecheck:declaration-files,typecheck:code\" && npm run lint",
    "integrity-check:web-app": "cd client-side/web-app && npm run integrity-check",
    "integrity-check:web-app:fast": "cd client-side/web-app && npm run integrity-check:fast",
    "_integrity-check:all": "npm run build:smart-contracts && concurrently \"npm run integrity-check:api\" \"npm run integrity-check:web-app\" -n \"api,web-app\"",
    "_integrity-check:all:fast": "npm run build:smart-contracts:fast && concurrently \"npm run integrity-check:api:fast\" \"npm run integrity-check:web-app:fast\" -n \"api,web-app\"",
    "integrity-check:all": "IS_INTEGRITY_CHECK=true npm run _integrity-check:all",
    "integrity-check:all:fast": "IS_INTEGRITY_CHECK=true npm run _integrity-check:all:fast",
    "precommit": "lint-staged && npm run integrity-check:all:fast",
    "pre-merge-commit": "npm run install:all && npm run integrity-check:all",
    "update-all-dependencies": "npm-check-updates --packageFile **/package.json --reject @types/node @nestjs/typeorm typeorm -u && npm run reset-all-dependencies",
    "reset-all-dependencies": "rimraf **/package-lock.json **/node_modules && npm run install:all",
    "reset-repository": "git clean -Xdf",
    "nest": "nest",
    "typeorm": "npm run ts-node ./node_modules/.bin/typeorm",
    "ts-node": "ts-node --project tsconfig.build.json --transpile-only -r tsconfig-paths/register",
    "prepare": "husky install",
    "hardhat": "TS_NODE_TRANSPILE_ONLY=1 npx hardhat",
    "clean:smart-contracts": "npm run hardhat clean && rimraf libs/smart-contracts/{cache,artifacts,typechain,typechain-types}",
    "build:smart-contracts": "npm run clean:smart-contracts && npm run build:smart-contracts:fast",
    "build:smart-contracts:fast": "npm run hardhat compile"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.54.1",
    "@nestjs/common": "^8.4.1",
    "@nestjs/core": "^8.4.1",
    "@nestjs/platform-express": "^8.4.1",
    "@nestjs/swagger": "^5.2.0",
    "@nestjs/typeorm": "~8.0.4",
    "@openzeppelin/contracts": "^4.5.0",
    "cookie-parser": "^1.4.6",
    "dotenv": "^16.0.0",
    "ethers": "^5.6.1",
    "firebase-admin": "^10.0.2",
    "glob": "^7.2.0",
    "not-me": "^5.0.0",
    "pg": "^8.7.3",
    "read-chunk": "^4.0.2",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.5.5",
    "sharp": "^0.30.3",
    "source-map-support": "^0.5.21",
    "swagger-ui-express": "^4.3.0",
    "typeorm": "~0.2.45",
    "uuid": "^8.3.2",
    "validator": "^13.7.0"
  },
  "devDependencies": {
    "@babel/plugin-proposal-decorators": "^7.17.2",
    "@nestjs/cli": "^8.2.3",
    "@nestjs/schematics": "^8.0.8",
    "@nestjs/testing": "^8.4.1",
    "@nomiclabs/hardhat-ethers": "^2.0.5",
    "@typechain/ethers-v5": "^9.0.0",
    "@typechain/hardhat": "^5.0.0",
    "@types/cookie-parser": "^1.4.2",
    "@types/express": "^4.17.13",
    "@types/jest": "^27.4.1",
    "@types/multer": "^1.4.7",
    "@types/node": "^16.11.21",
    "@types/pg": "^8.6.5",
    "@types/sharp": "^0.30.0",
    "@types/supertest": "^2.0.11",
    "@types/uuid": "^8.3.4",
    "@types/validator": "^13.7.1",
    "@types/webpack-env": "^1.16.3",
    "@typescript-eslint/eslint-plugin": "^5.15.0",
    "@typescript-eslint/parser": "^5.15.0",
    "eslint": "^8.11.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-import-resolver-typescript": "^2.5.0",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-node": "^11.1.0",
    "hardhat": "^2.9.1",
    "husky": "^7.0.4",
    "jest": "^27.5.1",
    "lint-staged": "^12.3.6",
    "npm-check-updates": "^12.5.3",
    "prettier": "^2.6.0",
    "run-script-webpack-plugin": "^0.0.11",
    "supertest": "^6.2.2",
    "ts-jest": "^27.1.3",
    "ts-loader": "^9.2.8",
    "ts-node": "^10.7.0",
    "tsconfig-paths": "^3.14.0",
    "typechain": "^7.0.1",
    "typescript": "^4.6.2",
    "webpack-node-externals": "^3.0.0"
  },
  "jest": {
    "setupFiles": [
      "<rootDir>/src/internals/environment/load-environment-variables.ts",
      "<rootDir>/test-environment-impl/base/set-test-process-context.ts"
    ],
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testMatch": [
      "**/*.spec.ts"
    ],
    "transform": {
      "^.+\\.ts$": "ts-jest"
    },
    "globals": {
      "ts-jest": {
        "isolatedModules": true,
        "tsconfig": "tsconfig.test.json"
      }
    },
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src/",
      "<rootDir>/libs/"
    ],
    "moduleDirectories": [
      "node_modules",
      "<rootDir>"
    ]
  },
  "lint-staged": {
    "*.{js,jsx,json,ts,tsx,scss,sass,css,md,yml,yaml}": "prettier --write"
  }
}
